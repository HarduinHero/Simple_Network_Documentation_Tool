== Specification d'un équipement in-rack

Un equipements peut être représenté sous forme de json.

.Exemple d'un json de description d'un switch 8 ports POE 1Gb + 2 ports combo (RJ-45 + SFP).
[source, json]
----
{
  "label" : "A-002-SW1",
  "common_label" : "Switch POE des camera du bureau 2 batiment A.",
  "description" : "Dans la baie à coté du bureau de michel.",
  "model" : "marqueXX : SW8-POE+2c",
  "u_size" : 1,
  "auto_draw" : {
    "column_group_width" : [4, 4, 2],
    "column_interfaces_patern" : ["-", "-", "M"]
  },
  "interfaces" : [
    {"type" : "eth", "id" : 1, "speeds" : [10, 100, 1000], "poe" : "out", "vlans" : [42]},
    {"type" : "eth", "id" : 2, "speeds" : [10, 100, 1000], "poe" : "out", "vlans" : [42]},
    {"type" : "eth", "id" : 3, "speeds" : [10, 100, 1000], "poe" : "out", "vlans" : [42]},
    {"type" : "eth", "id" : 4, "speeds" : [10, 100, 1000], "poe" : "out", "vlans" : [42]},
    {"type" : "eth", "id" : 5, "speeds" : [10, 100, 1000], "poe" : "out", "vlans" : [42]},
    {"type" : "eth", "id" : 6, "speeds" : [10, 100, 1000], "poe" : "out", "vlans" : [42]},
    {"type" : "eth", "id" : 7, "speeds" : [10, 100, 1000], "poe" : "out", "vlans" : [42]},
    {"type" : "eth", "id" : 8, "speeds" : [10, 100, 1000], "poe" : "out", "vlans" : [42]},
    {"type" : "eth", "id" : 9, "speeds" : [10, 100, 1000]},
    {"type" : "eth", "id" : 10, "speeds" : [10, 100, 1000]},
    {"type" : "sfp", "id" : 9, "speeds" : [10, 100, 1000]},
    {"type" : "sfp", "id" : 10, "speeds" : [10, 100, 1000]},
  ]
}
----

[cols="1,2,1,4"]
|===
|Champ      |Domaine    |Obligatoire    |Descriptions

a|`label`
|string
|oui
|Le nom technique de référence de l'équipement. **Identifie l'équipement**.

a|`common_label`
|string
|oui
|Le nom commun donné à l'équipement.

a|`description`
|string
|oui
|La description de l'équipement.

a|`model`
|string
|oui
|Le modele de léquipement.

a|`u_size`
|integer, >0
|oui
|La hauteur en U de l'équipement.

a|`custom_draw`
|string
|non
|Dessin SVG personalisé.

a|`auto_draw`
|object
|non
|Paramètre de dessin automatique de l'équipement. Pris en compte si aucun dessin n'est donné.

a|`auto_draw.column_group_width`
|[ integer ]
|oui, dans auto_draw
|Tableau des largeur de colonnes, en nombre d'interface. Un élément du tableau représente la largeur d'un groupement d'interfaces.

a|`auto_draw.column_interfaces_patern`
|[ string flag : { Z, M, W, -} ]
|oui, dans auto_draw
|Le paterne de répartition automatique des interfaces dans un groupement d'interface.

a|`interfaces`
|[ object ]
|oui
|Tableau des interfaces réseau. L'ordre des interfaces est important il indique l'ordre de dessin des interfaces lorsqu'elles sont dessinées automatiquement, indépendemment de l'id.

a|`interfaces.obj.type`
|string flag : { eth, sfp }
|oui
|Technologie d'interface.

a|`interfaces.obj.id`
|integer
|oui
|Numéro de l'interface inscrit sur l'équipement.

a|`interfaces.obj.poe`
|string flag : { in, out }
|non
|Si abscent, alors interface non POE. Si présent, ="out" indique que l'équiement fournie une alimentation POE. Si ="in" indique que l'équipement est alimenté par POE.

a|`interfaces.obj.speeds`
|[ integer ]
|non
|Les vitesses disponibles sur l'interface donné en Mb.

a|`interfaces.obj.vlans`
|integer
|non
|Indique les vlans attribués à cette interface.

a|`interfaces.obj.agg`
|integer
|non
|Numéro du lien d'aggrégation du port. Permet de représenter des aggrégations.

|===

=== Précisions : id

Plusieurs interfaces peuvent partager le meme id, elles seront alors considérés comme des combo.

=== Précisions : auto_draw.column_interfaces_patern

Le paramètre `auto_draw.interfaces_patern` indique le schéma de répartition des interfaces dans un groupement lorsqu'elle est faite de manière automatique. +
Par défaut (valeur invalide ou paramètre abscent), ce paramètre vaut M

.Exemples des types de patern.
....
column_interfaces_patern = "-"
 1    2    3    4    5    6  
[ ]  [ ]  [ ]  [ ]  [ ]  [ ]

column_interfaces_patern = "Z"
 1    2    3  
[ ]  [ ]  [ ]
[ ]  [ ]  [ ]
 4    5    6

column_interfaces_patern = "M"
 2    4    6  
[ ]  [ ]  [ ]
[ ]  [ ]  [ ]
 1    3    5

column_interfaces_patern = "W"
 1    3    5  
[ ]  [ ]  [ ]
[ ]  [ ]  [ ]
 2    4    6
....

=== Précisions : auto_draw.column_group_width
Le paramètre `auto_draw.column_group_width` indique la largeur des groupement d'interface. Dans un groupement d'interface, les interfaces sont proches. Deux groupements sont plus distants. +
Au sein d'un groupement, les interfaces sont organisés en fonction du paramètre `auto_draw.column_interfaces_patern`.

Un groupement est un index qui est partagé entre les deux listes `auto_draw.column_interfaces_patern` et `auto_draw.column_group_width`

.Exemple de largeur et répartition de colonnes.
----
auto_draw.column_group_width = [3, 3, 3]
auto_draw.column_interfaces_patern = ["M", "M", "M"]
[] [] []    [] [] []    [] [] []
[] [] []    [] [] []    [] [] []


auto_draw.column_group_width = [6, 2]
auto_draw.column_interfaces_patern = ["M", "M"]
[] [] [] [] [] []    [] []
[] [] [] [] [] []    [] []

auto_draw.column_group_width = [6, 2]
auto_draw.column_interfaces_patern = ["-", "M"]
                     [] []
[] [] [] [] [] []    [] []
----

=== Précisions : custom_draw